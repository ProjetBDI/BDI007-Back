CREATE INDEX IDX_FESTIVAL_NB_PASS_DISPO ON FESTIVAL(NB_PASS_DISPO);
CREATE INDEX IDX_FESTIVAL_NB_PASS_TOTAL ON FESTIVAL(NB_PASS_TOTAL);
CREATE INDEX IDX_FESTIVAL_NB_PASS_INDISPO ON FESTIVAL(NB_PASS_INDISPO);

CREATE INDEX IDX_PANIER_ETAPE_NB_PLACE_OCCUPPE ON PANIER_ETAPE(NB_PLACE_OCCUPPE);

ALTER TABLE FESTIVAL ADD NB_PASS_VENDU NUMBER(4);
CREATE INDEX IDX_FESTIVAL_NB_PASS_VENDUS ON FESTIVAL(NB_PASS_VENDUS);

COMMIT;

-- Calcul du nombre de pass vendus
UPDATE FESTIVAL F SET F.NB_PASS_VENDUS = (
    SELECT SUM(PE.NB_PLACE_OCCUPPE)
    FROM PANIER_ETAPE PE
    JOIN ETAPE E ON E.ID_ETAPE = PE.ID_ETAPE
    JOIN COVOITURAGE C ON C.ID_COVOITURAGE = E.ID_COVOITURAGE
    WHERE F.ID_FESTIVAL = C.ID_FESTIVAL
    )
;

-- Calcul du nombre total
UPDATE FESTIVAL F SET F.NB_PASS_TOTAL = F.NB_PASS_TOTAL + ABS(F.NB_PASS_TOTAL - F.NB_PASS_VENDUS)
                  WHERE F.NB_PASS_TOTAL  - F.NB_PASS_VENDUS < 0 ;

-- Calcul du nombre de pass dispo
UPDATE FESTIVAL F SET F.NB_PASS_DISPO = (
    SELECT SUM(C.NB_PLACE_DISPO)
    FROM COVOITURAGE C
    WHERE C.ID_FESTIVAL = F.ID_FESTIVAL
    );

-- Calcul du nombre de pass indispo
UPDATE FESTIVAL F SET F.NB_PASS_INDISPO = F.NB_PASS_TOTAL - F.NB_PASS_DISPO - F.NB_PASS_VENDUS;

UPDATE FESTIVAL F SET F.NB_PASS_TOTAL = F.NB_PASS_TOTAL + ABS(F.NB_PASS_INDISPO) WHERE F.NB_PASS_INDISPO < 0;

UPDATE FESTIVAL F SET F.NB_PASS_INDISPO = F.NB_PASS_TOTAL - F.NB_PASS_DISPO - F.NB_PASS_VENDUS;



